using System.Collections.Generic;  namespace FooFramework {   public class OverridingList<T>   {     T[] data;     int index;     bool maxReached;      public OverridingList(int maxItems)     {       data = new T[maxItems];       index = 0;       maxReached = false;     }      public void Resize (int size)     {       T[] newData = new T[size];       List<T> curData = GetList();       if (curData.Count >= size)       {         curData.CopyTo(0, newData, 0, size);         index = 0;         maxReached = true;       }       else       {         curData.CopyTo(newData, 0);         index = curData.Count;         maxReached = false;       }        data = newData;     }      public int Length     {       get { return data.Length; }       set { Resize(value); }     }      public void Add(T arg)     {       data[index++] = arg;       if (index == data.Length)       {         maxReached = true;         index = 0;       }     }      public List<T> GetList()     {       List<T> res = new List<T>(maxReached ? data.Length : index);        if (maxReached)       {         for (int i = index; i < data.Length; i++)           res.Add(data[i]);       }       for (int i = 0; i < index; i++)         res.Add(data[i]);        return res;     }   } }  