using System; using System.Collections.Generic;  namespace FooFramework {   public enum LogLevel   {     Low, Medium, Error, Fatal   }    public class Logger   {     static Logger instance;      const int LOG_SIZE = 1024;      public static Logger GetInstance()     {       if (instance == null)         instance = new Logger();       return instance;     }      readonly OverridingList<string> log;     LogLevel minLogLevel;      Logger()     {       log = new OverridingList<string>(LOG_SIZE);       minLogLevel = LogLevel.Medium;     }      public int Length     {        get { return log.Length; }        set { log.Length = value; }     }      bool Filter (Component component, LogLevel level)     {       return (int)level >= (int)minLogLevel;     }      public void SetMinLogLevel(LogLevel level)     {       lock (log)         minLogLevel = level;     }      public List<string> GetLog()     {       lock (log)         return log.GetList();     }      public void Log (Component component, string message, LogLevel level)     {       lock (log)       {         string item = string.Format("{0} :: {1}({2}) :: {3}",                                      DateTime.Now, component.FullPath,                                       level, message);         if (Filter(component, level))           log.Add(item);         #if DEBUG         Console.WriteLine(item);         #endif       }     }   } }  